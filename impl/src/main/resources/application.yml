server:
  port: 8080
feign:
  client:
    url: http://${HOST_FEIGN:localhost}:8082/msg
    enable: ${FEIGN_LOCAL:true}
spring:
  liquibase:
    enabled: true
    drop-first: ${DROP_FIRST:false}
    change-log: classpath:database-social.network-changelog.xml
    default-schema: skillbox

  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}

    topic:
      account: ${KAFKA_TOPIC_ACCOUNT:update.account.online}
      event-notifications: ${KAFKA_TOPIC_NOTIFICATIONS:notificationsdto}
      socket-message: ${KAFKA_TOPIC_SOCKET:notifications}
      adapter: ${KAFKA_ADAPTER:msg}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:groupIdAccount}

  datasource:
    url: jdbc:postgresql://${HOST:localhost}:${PORT:5432}/${DB_NAME:skillbox}
    username: ${DB_USERNAME:skillbox}
    password: ${DB_PASSWORD:skillbox}
    driverClassName: org.postgresql.Driver

  cache:
    cache-names: ${CACHE_NAMES:countriesCache, citiesCache}
    type: ${CACHE_TYPE:redis}
  data:
    redis:
      host: ${HOST_REDIS:localhost}
      port: ${PORT_REDIS:6379}

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: skillbox
    open-in-view: false

  mail:
    linkHost: ${HOST:localhost:8099}
    protocol: smtps
    username: skillboxgroup@gmail.com
    password: aznpcwtdkuvoehzd
    host: smtp.gmail.com
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  servlet:
    multipart:
      max-file-size: 3MB
logging:
  level:
    ru.skillbox.diplom.group40.social.network.impl:
      security.cookie: ${LOG_COOKIE:info}
      service.auth: ${LOG_SECURITY-COLLECTIONS:info}

    org:
      springframework: ${LOG:info}
  file:
    name: logs/log
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]"

security:
  enabled: true
  accessTokenLifetime: ${accessTokenLifetime:60}
  refreshTokenLifetime: ${refreshTokenLifetime:60}
  captcha:
    length: 4
  jwt:
    public-key-pem: |
      -----BEGIN PUBLIC KEY-----
      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu7qaYinf08Q+4Fe0NETT
      pt7h4019VICO95AbCuFocAOBvoGqXevh/fo5ybSSJwA5sF7NOKyiSBRr7uAl6y6W
      WFPpwQSR7d+fcbuRX6FV1bx/5y1ZMEDXY3cdw8Pk+U4ZPhtQIsPzT6YtYbYjyhpF
      qukxXGueaDS4no1kMn8Kq2P5W+ov11lzJn6OaMPF1ndW5aud5EGMn0EgLabVLWXh
      D6fKGVkrJ8uIAZOmv8EWsiaQcIiUFnIiI+j3CbeaeJSdOcotc+vKdcuSU136rQsI
      iMTuod2L/raElmPvBkbtKenjZr773/CLOxvaZLdIpPNnxRAxKSgS+b4SFRIRrFr0
      iwIDAQAB
      -----END PUBLIC KEY-----
    private-key-pem: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7uppiKd/TxD7g
      V7Q0RNOm3uHjTX1UgI73kBsK4WhwA4G+gapd6+H9+jnJtJInADmwXs04rKJIFGvu
      4CXrLpZYU+nBBJHt359xu5FfoVXVvH/nLVkwQNdjdx3Dw+T5Thk+G1Aiw/NPpi1h
      tiPKGkWq6TFca55oNLiejWQyfwqrY/lb6i/XWXMmfo5ow8XWd1blq53kQYyfQSAt
      ptUtZeEPp8oZWSsny4gBk6a/wRayJpBwiJQWciIj6PcJt5p4lJ05yi1z68p1y5JT
      XfqtCwiIxO6h3Yv+toSWY+8GRu0p6eNmvvvf8Is7G9pkt0ik82fFEDEpKBL5vhIV
      EhGsWvSLAgMBAAECggEAFninmpYs8EI+oofCZDqpjoEseeh11vkijpi7MUoPwHod
      pupfidQ+s4enMNwCs1TFaGAYtwQsfW37CNeKQm92WLFcEETrRkBCljsfvi+SQOj0
      8ye2/t3WyoBg2Y+n533FQMLFN2bMR7L6c1v5nGtuU8nhJOZ5n5Cmrs1O+p/BbQga
      sthGdjYGMSxRmMUc91l7mD72QKWDzYIIQr3HFGFGU8Y/I/jDDGU6GcH5W9n5S9J3
      s2/bmxBare76N4dYA/H1NW0IhVINlQsEgZqgs1VeR0m0Br6juBc8NMuF63i/7z2L
      5Zoz2TWS2grvH+qzMhCDpDYqju6C9mpvUJ0iFh5svQKBgQD9OG4kQc8y/AT/QlRL
      bhxSRHSwIv22mbzNBpqp1VSZiugEsK8s6s1xM8rQ5csUIK7ahIjgauEwRzmG8jTe
      GF+eQ0Iud21CPjyP/oDPQcaWAOoj/e1v9SymYM1pI8i9Yl6uwyAZogBmIYvdrQcA
      rorSQjEV2PZp9LXtnh9bt/hI9wKBgQC9yiLrjMdPXzLNWd/bucmK0HtF5f7aBLIR
      Q1xdfB2Guhn/oThZJgPw/l9eCMzWuL5e/wsuioxj1YcztFIk2gQKoK1MF4MOEDdj
      Vv89RT9sd3wBHgof5ZFSBGh4jIV2Hr675z0AurwDBZZSyU4jqR8Wgd8haZSDqam0
      v+aWJqrADQKBgBC76PN2ceXxp7biwEVX2oFJStjVByVJFaQK+q+cjIG1H04oCvuR
      7M+9V3rkpL4IxuVj+tOx3H3fRxr26K2AuNjxou8FL3BAQqpVbFfGBgSlvNNyFX3f
      mvrHzOtU1RBG7vDnrjhjb1lQgDi/FYZjAoOQokPKWcZ4yIkSeQoLp1nTAoGAfoOL
      iaebiR51uAvsPQV5Ay78rdimbWDp7rYPkUXWTOQrxosLC+pagEChBAcrvQsD5EFx
      i8HR2g8SBHZ0t5oZTZhUTT/zHeHTekYY+Rf7Mmvn3rrOlvqqR5kmpw1NPjM6g/me
      YakZAY6s6VzF2OG5FoDWY+iElsv3k8TEil0WP9UCgYEAwAvOZMpldJmOpcjLO4oz
      jtyAwFQHgyadwx3w5HzQ9toByu1EriYes0wCsRBjUPU2P374QRVIcuMU0cohf+gt
      czToOjHj1Vy2eZ8JOGXISuDJMA8QJ6w14qTKoniYFQJ15mvEhuqPd+0l4BKYlFiO
      bFSb2IF1rMRuGMjD0Q8hdBQ=
      -----END RSA PRIVATE KEY-----

cloudinary.api_secret: ${CL_API_SECRET:BzsU8c95MxdyLtzjzoxulVX47K8}
cloudinary.cloud_name: ${CL_NAME:networkskillbox}
cloudinary.api_key: ${CL_KEY:394391898715588}

management:
  endpoints.web.exposure.include: 'prometheus, health'
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
  endpoints:
    web:
      base-path: ${ACTUATOR_PATH:/api/v1/actuator}
createrError: ${CREATER_ERROR:false}


cron:
  delayedPost: "0 * * * * *"
  wishHappyBirthday: "0 0 12 * * *"

springdoc:
  swagger-ui:
    path: /api/v1/sw/
  api-docs:
    path: /api/v1/sw



